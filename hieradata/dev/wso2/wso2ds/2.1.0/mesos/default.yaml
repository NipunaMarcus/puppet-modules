# Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
classes:
  - wso2ds

wso2::service_name: wso2ds
wso2::hostname: marathon-lb.marathon.mesos
wso2::mgt_hostname: marathon-lb.marathon.mesos

wso2::clustering:
  enabled: true
  membership_scheme: mesos
#  mesos:
#    marathon_applications:
#    enable_marathon_basic_auth: true
#    marathon_username: username
#    marathon_password: password

# Uncomment following when needed.
#wso2::file_list:
#  - repository/components/lib/%{hiera('wso2::datasources::mysql::connector_jar')}
#  - repository/resources/security/wso2carbon.jks
#  - repository/resources/security/client-truststore.jks

wso2::template_list:
  - repository/conf/identity/application-authentication.xml
  - repository/conf/identity/identity.xml
  - repository/conf/identity/sso-idp-config.xml
  - repository/conf/dashboards/portal.json
#  - repository/conf/security/cipher-text.properties
#  - repository/conf/security/cipher-tool.properties
#  - bin/ciphertool.sh

# In Mesos proxy ports need to be configured to match with service ports.
# Following ports have been defined for servlet HTTP and HTTPS transports.
wso2::ports:
  proxyPort:
    http: 10082
    https: 10083

wso2::service_provider:
  portal:
    issuer: portal
    acs:  https://marathon-lb.marathon.mesos:10083/portal/acs

wso2::identity_provider:
  portal:
    issuer: portal
    identity_provider_url:  https://marathon-lb.marathon.mesos:10083/samlsso

wso2::is_datasource:  wso2_carbon_db
wso2::usermgt_datasource:  wso2_user_db

wso2::master_datasources:
  wso2_gov_db:
    name: WSO2_GOV_DB
    description: The datasource used for config registry
    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
    url: jdbc:mysql://mysql-ds-db.marathon.mesos:10081/DS_GOV_DB?autoReconnect=true
    username: "%{hiera('wso2::datasources::mysql::username')}"
    password: "%{hiera('wso2::datasources::mysql::password')}"
    jndi_config: jdbc/WSO2_GOV_DB
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

  wso2_user_db:
    name: WSO2_USER_DB
    description: The datasource used for config registry
    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
    url: jdbc:mysql://mysql-ds-db.marathon.mesos:10081/DS_USER_DB?autoReconnect=true
    username: "%{hiera('wso2::datasources::mysql::username')}"
    password: "%{hiera('wso2::datasources::mysql::password')}"
    jndi_config: jdbc/WSO2_USER_DB
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

wso2::registry_mounts:
  wso2_gov_db:
    path: /_system/governance
    target_path: /_system/governance
    read_only: false
    registry_root: /
    enable_cache: true

# Apply Authentication Method
wso2::authentication: basic

# Authorization Configuration
wso2::authorization:
#  activeMethod: oauth
  methods:
    oauth:
      idp_server: https://marathon-lb.marathon.mesos:10083/oauth2/token
      callback_url: https://marathon-lb.marathon.mesos:10083/portal
      client_name: portal
      owner: admin
      application_type: JaggeryApp
      grant_type: password refresh_token urn:ietf:params:oauth:grant-type:saml2-bearer
      saas_app: false
      dynamic_client_registration_endpoint: https://marathon-lb.marathon.mesos:10083/dynamic-client-web/register
      token_scope: Production

#SSO Configuration
wso2::sso_authentication:
  enabled: false
  login_page: /carbon/admin/login.jsp
  service_provider_id: carbonServer
  sso_service_url: https://marathon-lb.marathon.mesos:10083/samlsso
  consumer_service_url: https://marathon-lb.marathon.mesos:10083/acs

#Dep Sync configuration
#wso2::dep_sync:
#  enabled: false
#  auto_checkout: true
#  auto_commit: false
#  repository_type: svn
#  svn:
#    url: http://svnrepo.example.com/repos/
#    user: username
#    password: password
#    append_tenant_id: true

# Security vault configuration
#wso2::enable_secure_vault: true
#wso2::secure_vault_configs:
#  key_store_password:
#    secret_alias: Carbon.Security.KeyStore.Password
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/KeyStore/Password,false
#    password: "%{hiera('wso2::key_stores::key_store::password')}"
#
#  key_store_key_password:
#    secret_alias: Carbon.Security.KeyStore.KeyPassword
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/KeyStore/KeyPassword,false
#    password: "%{hiera('wso2::key_stores::key_store::key_password')}"
#
#  trust_store_password:
#    secret_alias: Carbon.Security.TrustStore.Password
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/TrustStore/Password,false
#    password: "%{hiera('wso2::key_stores::trust_store::password')}"
#
#  user_manager_admin_password:
#    secret_alias: UserManager.AdminUser.Password
#    secret_alias_value: repository/conf/user-mgt.xml//UserManager/Realm/Configuration/AdminUser/Password,false
#    password: "%{hiera('wso2::super_admin::password')}"
#
#  wso2_carbon_db_password:
#    secret_alias: Datasources.WSO2_CARBON_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_CARBON_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::common::password')}"
#
#  connector_key_store_password:
#    secret_alias: Server.Service.Connector.keystorePass
#    secret_alias_value: repository/conf/tomcat/catalina-server.xml//Server/Service/Connector[@keystorePass],true
#    password: "%{hiera('wso2::key_stores::connector_key_store::password')}"
#
#  registry_key_store_password:
#    secret_alias: Carbon.Security.RegistryKeyStore.Password
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/RegistryKeyStore/Password,false
#    password: "%{hiera('wso2::key_stores::registry_key_store::password')}"
#
#  registry_key_store_key_password:
#    secret_alias: Carbon.Security.RegistryKeyStore.KeyPassword
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/RegistryKeyStore/KeyPassword,false
#    password: "%{hiera('wso2::key_stores::registry_key_store::key_password')}"
#
#  wso2_gov_db_password:
#    secret_alias: Datasources.WSO2_GOV_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_GOV_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  wso2user_db_password:
#    secret_alias: Datasources.WSO2USER_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2USER_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  xmpp_password:
#    secret_alias: MultifactorAuthentication.XMPPSettings.XMPPConfig.XMPPPassword
#    secret_alias_value: repository/conf/identity.xml//MultifactorAuthentication/XMPPSettings/XMPPConfig/XMPPPassword,false
#    password: wso2carbon
#
#  user_trusted_RPStore_password:
#    secret_alias: Security.UserTrustedRPStore.Password
#    secret_alias_value: repository/conf/identity.xml//Server/Security/UserTrustedRPStore/Password,false
#    password: "%{hiera('wso2::key_stores::user_trusted_rp_store::password')}"
#
#  user_trusted_RPStore_key_password:
#    secret_alias: Security.UserTrustedRPStore.KeyPassword
#    secret_alias_value: repository/conf/identity.xml//Server/Security/UserTrustedRPStore/KeyPassword,false
#    password: "%{hiera('wso2::key_stores::user_trusted_rp_store::key_password')}"
#
#  authenticator_config_trust_store_password:
#    secret_alias: AuthenticatorConfig.TrustStore.Password
#    secret_alias_value: repository/conf/identity/application-authentication.xml//ApplicationAuthentication/AuthenticatorConfigs/AuthenticatorConfig[@name='OpenIDAuthenticator']/Parameter[@name='TrustStorePassword'],false
#    password: "%{hiera('wso2::key_stores::trust_store::password')}"
#
#  dep_sync_svn_password:
#    secret_alias: Carbon.DeploymentSynchronizer.SvnPassword
#    secret_alias_value: repository/conf/carbon.xml//Server/DeploymentSynchronizer/SvnPassword,true
#    password: password
#
#  thrift_based_entitlement_config_key_store_password:
#    secret_alias: EntitlementSettings.ThirftBasedEntitlementConfig.KeyStore.Password
#    secret_alias_value: repository/conf/identity.xml//Server/EntitlementSettings/ThirftBasedEntitlementConfig/KeyStore/Password,false
#    password: "%{hiera('wso2::key_stores::key_store::password')}"
